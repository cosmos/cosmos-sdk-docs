"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[67513],{3905:(e,o,t)=>{t.d(o,{Zo:()=>c,kt:()=>b});var n=t(67294);function a(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function r(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?r(Object(t),!0).forEach((function(o){a(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function i(e,o){if(null==e)return{};var t,n,a=function(e,o){if(null==e)return{};var t,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||(a[t]=e[t]);return a}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=n.createContext({}),l=function(e){var o=n.useContext(d),t=o;return e&&(t="function"==typeof e?e(o):s(s({},o),e)),t},c=function(e){var o=l(e.components);return n.createElement(d.Provider,{value:o},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},u=n.forwardRef((function(e,o){var t=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(t),u=a,b=p["".concat(d,".").concat(u)]||p[u]||m[u]||r;return t?n.createElement(b,s(s({ref:o},c),{},{components:t})):n.createElement(b,s({ref:o},c))}));function b(e,o){var t=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var d in o)hasOwnProperty.call(o,d)&&(i[d]=o[d]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<r;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},12483:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var n=t(87462),a=(t(67294),t(3905));const r={sidebar_position:1},s="ProtocolBuffer Annotations",i={unversionedId:"build/building-modules/protobuf-annotations",id:"version-0.53/build/building-modules/protobuf-annotations",title:"ProtocolBuffer Annotations",description:"This document explains the various protobuf scalars that have been added to make working with protobuf easier for Cosmos SDK application developers",source:"@site/versioned_docs/version-0.53/build/building-modules/05-protobuf-annotations.md",sourceDirName:"build/building-modules",slug:"/build/building-modules/protobuf-annotations",permalink:"/v0.53/build/building-modules/protobuf-annotations",draft:!1,tags:[],version:"0.53",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"Query Services",permalink:"/v0.53/build/building-modules/query-services"},next:{title:"BeginBlocker and EndBlocker",permalink:"/v0.53/build/building-modules/beginblock-endblock"}},d={},l=[{value:"Signer",id:"signer",level:2},{value:"Scalar",id:"scalar",level:2},{value:"Implements_Interface",id:"implements_interface",level:2},{value:"Method,Field,Message Added In",id:"methodfieldmessage-added-in",level:2},{value:"Amino",id:"amino",level:2},{value:"Name",id:"name",level:3},{value:"Field_Name",id:"field_name",level:3},{value:"Dont_OmitEmpty",id:"dont_omitempty",level:3},{value:"Encoding",id:"encoding",level:3}],c={toc:l},p="wrapper";function m(e){let{components:o,...t}=e;return(0,a.kt)(p,(0,n.Z)({},c,t,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"protocolbuffer-annotations"},"ProtocolBuffer Annotations"),(0,a.kt)("p",null,"This document explains the various protobuf scalars that have been added to make working with protobuf easier for Cosmos SDK application developers"),(0,a.kt)("h2",{id:"signer"},"Signer"),(0,a.kt)("p",null,"Signer specifies which field should be used to determine the signer of a message for the Cosmos SDK. This field can be used for clients as well to infer which field should be used to determine the signer of a message."),(0,a.kt)("p",null,"Read more about the signer field ",(0,a.kt)("a",{parentName:"p",href:"/v0.53/build/building-modules/messages-and-queries"},"here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e6848d99b55a65d014375b295bdd7f9641aac95e/proto/cosmos/bank/v1beta1/tx.proto#L40\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'option (cosmos.msg.v1.signer) = "from_address";\n')),(0,a.kt)("h2",{id:"scalar"},"Scalar"),(0,a.kt)("p",null,"The scalar type defines a way for clients to understand how to construct protobuf messages according to what is expected by the module and sdk."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'(cosmos_proto.scalar) = "cosmos.AddressString"\n')),(0,a.kt)("p",null,"Example of account address string scalar:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e6848d99b55a65d014375b295bdd7f9641aac95e/proto/cosmos/bank/v1beta1/tx.proto#L46\n")),(0,a.kt)("p",null,"Example of validator address string scalar: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/distribution/v1beta1/query.proto#L87\n")),(0,a.kt)("p",null,"Example of Decimals scalar: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/distribution/v1beta1/distribution.proto#L26\n")),(0,a.kt)("p",null,"Example of Int scalar: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/gov/v1/gov.proto#L137\n")),(0,a.kt)("p",null,"There are a few options for what can be provided as a scalar: ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.AddressString"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.ValidatorAddressString"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.ConsensusAddressString"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.Int"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.Dec"),". "),(0,a.kt)("h2",{id:"implements_interface"},"Implements_Interface"),(0,a.kt)("p",null,"Implement interface is used to provide information to client tooling like ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cosmology-tech/telescope"},"telescope")," on how to encode and decode protobuf messages. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'option (cosmos_proto.implements_interface) = "cosmos.auth.v1beta1.AccountI";\n')),(0,a.kt)("h2",{id:"methodfieldmessage-added-in"},"Method,Field,Message Added In"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"method_added_in"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"field_added_in")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"message_added_in")," are annotations to denotate to clients that a field has been supported in a later version. This is useful when new methods or fields are added in later versions and that the client needs to be aware of what it can call."),(0,a.kt)("p",null,"The annotation should be worded as follow:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'option (cosmos_proto.method_added_in) = "cosmos-sdk v0.50.1";\noption (cosmos_proto.method_added_in) = "x/epochs v1.0.0";\noption (cosmos_proto.method_added_in) = "simapp v24.0.0";\n')),(0,a.kt)("h2",{id:"amino"},"Amino"),(0,a.kt)("p",null,"The amino codec was removed in ",(0,a.kt)("inlineCode",{parentName:"p"},"v0.50+"),", this means there is not a need register ",(0,a.kt)("inlineCode",{parentName:"p"},"legacyAminoCodec"),". To replace the amino codec, Amino protobuf annotations are used to provide information to the amino codec on how to encode and decode protobuf messages. "),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Amino annotations are only used for backwards compatibility with amino. New modules are not required use amino annotations.")),(0,a.kt)("p",null,"The below annotations are used to provide information to the amino codec on how to encode and decode protobuf messages in a backwards compatible manner. "),(0,a.kt)("h3",{id:"name"},"Name"),(0,a.kt)("p",null,"Name specifies the amino name that would show up for the user in order for them see which message they are signing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'option (amino.name) = "cosmos-sdk/BaseAccount";\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/bank/v1beta1/tx.proto#L41\n")),(0,a.kt)("h3",{id:"field_name"},"Field_Name"),(0,a.kt)("p",null,"Field name specifies the amino name that would show up for the user in order for them see which field they are signing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'uint64 height = 1 [(amino.field_name) = "public_key"];\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/distribution/v1beta1/distribution.proto#L166\n")),(0,a.kt)("h3",{id:"dont_omitempty"},"Dont_OmitEmpty"),(0,a.kt)("p",null,"Dont omitempty specifies that the field should not be omitted when encoding to amino. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},"repeated cosmos.base.v1beta1.Coin amount = 3 [(amino.dont_omitempty)   = true];\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/bank/v1beta1/bank.proto#L56\n")),(0,a.kt)("h3",{id:"encoding"},"Encoding"),(0,a.kt)("p",null,"Encoding instructs the amino json marshaler how to encode certain fields that may differ from the standard encoding behaviour. The most common example of this is how ",(0,a.kt)("inlineCode",{parentName:"p"},"repeated cosmos.base.v1beta1.Coin")," is encoded when using the amino json encoding format. The ",(0,a.kt)("inlineCode",{parentName:"p"},"legacy_coins")," option tells the json marshaler ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/x/tx/signing/aminojson/json_marshal.go#L65"},"how to encode a null slice")," of ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.base.v1beta1.Coin"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},'(amino.encoding)         = "legacy_coins",\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/e8f28bf5db18b8d6b7e0d94b542ce4cf48fed9d6/proto/cosmos/bank/v1beta1/genesis.proto#L23\n")))}m.isMDXComponent=!0}}]);