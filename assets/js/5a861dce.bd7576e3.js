"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[63828],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),c=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,k=p["".concat(o,".").concat(m)]||p[m]||d[m]||i;return r?a.createElement(k,l(l({ref:t},u),{},{components:r})):a.createElement(k,l({ref:t},u))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<i;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},82630:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const i={},l="x/circuit",s={unversionedId:"build/modules/circuit/README",id:"version-0.5/build/modules/circuit/README",title:"x/circuit",description:"Concepts",source:"@site/versioned_docs/version-0.5/build/modules/circuit/README.md",sourceDirName:"build/modules/circuit",slug:"/build/modules/circuit/",permalink:"/v0.50/build/modules/circuit/",draft:!1,tags:[],version:"0.5",frontMatter:{},sidebar:"buildSidebar",previous:{title:"x/upgrade",permalink:"/v0.50/build/modules/upgrade/"},next:{title:"x/genutil",permalink:"/v0.50/build/modules/genutil/"}},o={},c=[{value:"Concepts",id:"concepts",level:2},{value:"State",id:"state",level:2},{value:"Accounts",id:"accounts",level:3},{value:"Disable List",id:"disable-list",level:3},{value:"State Transitions",id:"state-transitions",level:2},{value:"Authorize",id:"authorize",level:3},{value:"Trip",id:"trip",level:3},{value:"Reset",id:"reset",level:3},{value:"Messages",id:"messages",level:2},{value:"MsgAuthorizeCircuitBreaker",id:"msgauthorizecircuitbreaker",level:3},{value:"MsgTripCircuitBreaker",id:"msgtripcircuitbreaker",level:3},{value:"MsgResetCircuitBreaker",id:"msgresetcircuitbreaker",level:3},{value:"Events - list and describe event tags",id:"events---list-and-describe-event-tags",level:2},{value:"Message Events",id:"message-events",level:3},{value:"MsgAuthorizeCircuitBreaker",id:"msgauthorizecircuitbreaker-1",level:4},{value:"MsgTripCircuitBreaker",id:"msgtripcircuitbreaker-1",level:4},{value:"ResetCircuitBreaker",id:"resetcircuitbreaker",level:4},{value:"Keys - list of key prefixes used by the circuit module",id:"keys---list-of-key-prefixes-used-by-the-circuit-module",level:2},{value:"Client - list and describe CLI commands and gRPC and REST endpoints",id:"client---list-and-describe-cli-commands-and-grpc-and-rest-endpoints",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"xcircuit"},(0,n.kt)("inlineCode",{parentName:"h1"},"x/circuit")),(0,n.kt)("h2",{id:"concepts"},"Concepts"),(0,n.kt)("p",null,"Circuit Breaker is a module that is meant to avoid a chain needing to halt/shut down in the presence of a vulnerability, instead the module will allow specific messages or all messages to be disabled. When operating a chain, if it is app specific then a halt of the chain is less detrimental, but if there are applications built on top of the chain then halting is expensive due to the disturbance to applications. "),(0,n.kt)("p",null,"Circuit Breaker works with the idea that an address or set of addresses have the right to block messages from being executed and/or included in the mempool. Any address with a permission is able to reset the circuit breaker for the message. "),(0,n.kt)("p",null,"The transactions are checked and can be rejected at two points:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In ",(0,n.kt)("inlineCode",{parentName:"li"},"CircuitBreakerDecorator")," ",(0,n.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/learn/advanced/baseapp#antehandler"},"ante handler"),":")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/x/circuit/v0.1.0/x/circuit/ante/circuit.go#L27-L41\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"With a ",(0,n.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/learn/advanced/baseapp#msg-service-router"},"message router check"),":")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.50.1/baseapp/msg_service_router.go#L104-L115\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"CircuitBreakerDecorator")," works for most use cases, but ",(0,n.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/learn/beginner/tx-lifecycle#antehandler"},"does not check the inner messages of a transaction"),". This some transactions (such as ",(0,n.kt)("inlineCode",{parentName:"p"},"x/authz")," transactions or some ",(0,n.kt)("inlineCode",{parentName:"p"},"x/gov")," transactions) may pass the ante handler. ",(0,n.kt)("strong",{parentName:"p"},"This does not affect the circuit breaker")," as the message router check will still fail the transaction.\nThis tradeoff is to avoid introducing more dependencies in the ",(0,n.kt)("inlineCode",{parentName:"p"},"x/circuit")," module. Chains can re-define the ",(0,n.kt)("inlineCode",{parentName:"p"},"CircuitBreakerDecorator")," to check for inner messages if they wish to do so.")),(0,n.kt)("h2",{id:"state"},"State"),(0,n.kt)("h3",{id:"accounts"},"Accounts"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AccountPermissions ",(0,n.kt)("inlineCode",{parentName:"li"},"0x1 | account_address  -> ProtocolBuffer(CircuitBreakerPermissions)"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"type level int32\n\nconst (\n    // LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit\n    // breaker permissions.\n    LEVEL_NONE_UNSPECIFIED = iota\n    // LEVEL_SOME_MSGS indicates that the account will have permission to\n    // trip or reset the circuit breaker for some Msg type URLs. If this level\n    // is chosen, a non-empty list of Msg type URLs must be provided in\n    // limit_type_urls.\n    LEVEL_SOME_MSGS\n    // LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit\n    // breaker for Msg's of all type URLs.\n    LEVEL_ALL_MSGS \n    // LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker\n    // actions and can grant permissions to other accounts.\n    LEVEL_SUPER_ADMIN\n)\n\ntype Access struct {\n    level int32 \n    msgs []string // if full permission, msgs can be empty\n}\n")),(0,n.kt)("h3",{id:"disable-list"},"Disable List"),(0,n.kt)("p",null,"List of type urls that are disabled."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"DisableList ",(0,n.kt)("inlineCode",{parentName:"li"},"0x2 | msg_type_url -> []byte{}")," ")),(0,n.kt)("h2",{id:"state-transitions"},"State Transitions"),(0,n.kt)("h3",{id:"authorize"},"Authorize"),(0,n.kt)("p",null,"Authorize, is called by the module authority (default governance module account) or any account with ",(0,n.kt)("inlineCode",{parentName:"p"},"LEVEL_SUPER_ADMIN")," to give permission to disable/enable messages to another account. There are three levels of permissions that can be granted. ",(0,n.kt)("inlineCode",{parentName:"p"},"LEVEL_SOME_MSGS")," limits the number of messages that can be disabled. ",(0,n.kt)("inlineCode",{parentName:"p"},"LEVEL_ALL_MSGS")," permits all messages to be disabled. ",(0,n.kt)("inlineCode",{parentName:"p"},"LEVEL_SUPER_ADMIN")," allows an account to take all circuit breaker actions including authorizing and deauthorizing other accounts."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf"},"  // AuthorizeCircuitBreaker allows a super-admin to grant (or revoke) another\n  // account's circuit breaker permissions.\n  rpc AuthorizeCircuitBreaker(MsgAuthorizeCircuitBreaker) returns (MsgAuthorizeCircuitBreakerResponse);\n")),(0,n.kt)("h3",{id:"trip"},"Trip"),(0,n.kt)("p",null,"Trip, is called by an authorized account to disable message execution for a specific msgURL. If empty, all the msgs will be disabled."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf"},"  // TripCircuitBreaker pauses processing of Msg's in the state machine.\n  rpc TripCircuitBreaker(MsgTripCircuitBreaker) returns (MsgTripCircuitBreakerResponse);\n")),(0,n.kt)("h3",{id:"reset"},"Reset"),(0,n.kt)("p",null,"Reset is called by an authorized account to enable execution for a specific msgURL of previously disabled message. If empty, all the disabled messages will be enabled."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf"},"  // ResetCircuitBreaker resumes processing of Msg's in the state machine that\n  // have been been paused using TripCircuitBreaker.\n  rpc ResetCircuitBreaker(MsgResetCircuitBreaker) returns (MsgResetCircuitBreakerResponse);\n")),(0,n.kt)("h2",{id:"messages"},"Messages"),(0,n.kt)("h3",{id:"msgauthorizecircuitbreaker"},"MsgAuthorizeCircuitBreaker"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/main/proto/cosmos/circuit/v1/tx.proto#L25-L75\n")),(0,n.kt)("p",null,"This message is expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the granter is not an account with permission level ",(0,n.kt)("inlineCode",{parentName:"li"},"LEVEL_SUPER_ADMIN")," or the module authority")),(0,n.kt)("h3",{id:"msgtripcircuitbreaker"},"MsgTripCircuitBreaker"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/main/proto/cosmos/circuit/v1/tx.proto#L77-L93\n")),(0,n.kt)("p",null,"This message is expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"if the signer does not have a permission level with the ability to disable the specified type url message")),(0,n.kt)("h3",{id:"msgresetcircuitbreaker"},"MsgResetCircuitBreaker"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/main/proto/cosmos/circuit/v1/tx.proto#L95-109\n")),(0,n.kt)("p",null,"This message is expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"if the type url is not disabled")),(0,n.kt)("h2",{id:"events---list-and-describe-event-tags"},"Events - list and describe event tags"),(0,n.kt)("p",null,"The circuit module emits the following events:"),(0,n.kt)("h3",{id:"message-events"},"Message Events"),(0,n.kt)("h4",{id:"msgauthorizecircuitbreaker-1"},"MsgAuthorizeCircuitBreaker"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"granter"),(0,n.kt)("td",{parentName:"tr",align:null},"{granterAddress}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"grantee"),(0,n.kt)("td",{parentName:"tr",align:null},"{granteeAddress}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"permission"),(0,n.kt)("td",{parentName:"tr",align:null},"{granteePermissions}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"module"),(0,n.kt)("td",{parentName:"tr",align:null},"circuit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"authorize_circuit_breaker")))),(0,n.kt)("h4",{id:"msgtripcircuitbreaker-1"},"MsgTripCircuitBreaker"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"authority"),(0,n.kt)("td",{parentName:"tr",align:null},"{authorityAddress}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"[]string"),(0,n.kt)("td",{parentName:"tr",align:null},"msg_urls"),(0,n.kt)("td",{parentName:"tr",align:null},"[]string{msg_urls}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"module"),(0,n.kt)("td",{parentName:"tr",align:null},"circuit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"trip_circuit_breaker")))),(0,n.kt)("h4",{id:"resetcircuitbreaker"},"ResetCircuitBreaker"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"authority"),(0,n.kt)("td",{parentName:"tr",align:null},"{authorityAddress}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"[]string"),(0,n.kt)("td",{parentName:"tr",align:null},"msg_urls"),(0,n.kt)("td",{parentName:"tr",align:null},"[]string{msg_urls}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"module"),(0,n.kt)("td",{parentName:"tr",align:null},"circuit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"reset_circuit_breaker")))),(0,n.kt)("h2",{id:"keys---list-of-key-prefixes-used-by-the-circuit-module"},"Keys - list of key prefixes used by the circuit module"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AccountPermissionPrefix")," - ",(0,n.kt)("inlineCode",{parentName:"li"},"0x01")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DisableListPrefix")," -  ",(0,n.kt)("inlineCode",{parentName:"li"},"0x02"))),(0,n.kt)("h2",{id:"client---list-and-describe-cli-commands-and-grpc-and-rest-endpoints"},"Client - list and describe CLI commands and gRPC and REST endpoints"))}d.isMDXComponent=!0}}]);